{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["\"use strict\";\nconsole.log(\"funciona?funciona\");\n\n//------------------------QUERYSELECTOR--------------------------------\n\nconst cardList = document.querySelector(\".js-cardList\");\nconst favCardList = document.querySelector(\".js-favList\");\nconst searchInput = document.querySelector(\".js-input\");\nconst searchBtn = document.querySelector(\".js-button\");\n\n//----------------------VARIABLES GLOBALES -> VARIABLES CON DATOS DE LA APP--------------\n\nlet characters = [];\nlet favCharacters = [];\n\n//-------------------------------FUNCIONES-------------------------------\n\nfunction renderOneCard(oneCharacterCard, domElement) {\n  //DOM AVANZADO PARA PINTAR LAS TARJETAS\n  const liElement = document.createElement(\"li\");\n  //liElement.setAttribute(\"class\", \"listElement\");\n  liElement.setAttribute(\"class\", \"js-listElement\");\n  liElement.setAttribute(\"id\", `${oneCharacterCard.char_id}`);\n  const articleElement = document.createElement(\"article\");\n  articleElement.setAttribute(\"class\", \"listElement__article\");\n\n  const imageElement = document.createElement(\"img\");\n  imageElement.setAttribute(\"src\", `${oneCharacterCard.img}`);\n  imageElement.setAttribute(\"alt\", `${oneCharacterCard.name}`);\n  imageElement.setAttribute(\"class\", \"listElement__article--img\");\n\n  const nameElement = document.createElement(\"h3\");\n  const nameTextElement = document.createTextNode(`${oneCharacterCard.name}`);\n  nameElement.setAttribute(\"class\", \"listElement__article--name\");\n\n  const statusElement = document.createElement(\"p\");\n  const statusTextElement = document.createTextNode(\n    `${oneCharacterCard.status}`\n  );\n  statusElement.setAttribute(\"class\", \"listElement__article--status\");\n\n  nameElement.appendChild(nameTextElement);\n  statusElement.appendChild(statusTextElement);\n  articleElement.appendChild(imageElement);\n  articleElement.appendChild(nameElement);\n  articleElement.appendChild(statusElement);\n  liElement.appendChild(articleElement);\n  domElement.appendChild(liElement);\n}\n\n//revisar\nfunction renderAllCards(cards) {\n  //bucle para que se pinten cada una de las tarjetas de personaje\n  for (const card of cards) {\n    renderOneCard(card, cardList);\n  }\n\n  addListListeners();\n}\n\n//revisar\nfunction renderFavCharacters(favCards) {\n  //bucle para que se pinten las tarjetas favoritas\n\n  for (const favCard of favCards) {\n    renderOneCard(favCard, favCardList);\n  }\n}\n\nfunction addListListeners() {\n  //función para crear eventos sobre todos los elementos de la lista\n  const allCardElements = document.querySelectorAll(\".js-listElement\");\n  console.log(allCardElements);\n  for (const eachCardElements of allCardElements) {\n    eachCardElements.addEventListener(\"click\", handleClickCard);\n  }\n}\n\n//--------------------------------------EVENTOS-------------------------------------\n\nfunction handleClickCard(event) {\n  //aqui no toqué nada!\n  //console.log(\"clickclickclick\");\n  //console.log(event);\n  event.currentTarget.classList.toggle(\"selected\");\n  //console.log(event.currentTarget);\n\n  //console.log(event.currentTarget.id);\n  //console.log(characters);\n\n  const selectedCard = characters.find(\n    (eachCardObj) => eachCardObj.char_id === parseInt(event.currentTarget.id)\n  );\n  console.log(selectedCard);\n\n  const cardsInFavList = favCharacters.find(\n    (eachCardObj) => eachCardObj.char_id === parseInt(event.currentTarget.id)\n  );\n\n  console.log(cardsInFavList);\n\n  if (!cardsInFavList) {\n    favCharacters.push(selectedCard); //para guardarlo en el array si todavía no está en él\n  } else {\n    //si ya está en favoritos\n  }\n\n  renderFavCharacters(favCharacters); //función para pintar las tarjetas seleccionadas como favoritas\n  console.log(favCharacters); //en la consola aparecen los que tengo seleccionados, pero no se pintan\n}\n\n/*searchInput.addEventListener(\"input\", (event) => {\n  event.preventDefault();\n  const userSearch = searchInput.value.toLowerCase();\n  console.log(searchInput.value);\n\n  const filteredCharacters = characters.filter((eachCharacter) =>\n    eachCharacter.name.toLowerCase().includes(userSearch)\n  );\n\n  renderAllCards(filteredCharacters); //NO FUNCIONA\n});*/\n\n//-------------------------------CÓDIGO QUE SE EJECUTA AL CARGAR LA PÁGINA-------------------------------\n\n//renderAllCards(characters);\n\nfetch(\"https://breakingbadapi.com/api/characters\", {\n  method: \"GET\",\n  headers: { \"Content-Type\": \"application/json\" },\n})\n  .then((response) => response.json())\n  .then((charactersData) => {\n    //console.log(charactersData);\n    characters = charactersData;\n\n    //console.log(characters);\n\n    renderAllCards(characters);\n  });\n"]}